{"version":3,"sources":["rand.ts","emitter.ts","particles.ts","saveEmitters.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["randFloat","inclMin","exclMax","diff","Math","random","randSym","abs","fromSpec","spec","type","getType0Emitter","x","y","ex","ey","emitterX","emitterY","emit","mean","maxDeviation","probability","out","i","vx","vy","a","b","push","ax","ay","radius","vRadius","r","g","vr","vg","vb","va","startAnimationLoop","canvas","addedEmitters","TAU","PI","WIDTH","width","HEIGHT","height","ctx","getContext","emitters","map","particles","paused","shouldEmit","tick","len","length","newParticles","emitParticles","p","splice","moveParticles","clearRect","fillStyle","getStyle","beginPath","arc","closePath","fill","drawParticles","requestAnimationFrame","window","addEventListener","event","key","pushEmitter","popEmitter","pop","color","COORDINATES_KEY","saveEmitters","specs","localStorage","setItem","JSON","stringify","getSavedEmitters","savedString","getItem","parse","App","props","canvasRef","app","state","shouldAddEmitter","sceneModifier","undefined","React","createRef","bindMethods","this","onCanvasClick","bind","addEventListeners","current","Error","modifier","setState","removeEmitter","prevState","newEmitters","slice","alert","className","ref","onClick","clientX","clientY","altKey","console","log","rect","target","getBoundingClientRect","localX","left","localY","top","addEmitterIfNeeded","concat","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5d2ff6c.chunk.js","sourcesContent":["export function randFloat(inclMin: number, exclMax: number): number {\n  const diff = exclMax - inclMin;\n  return inclMin + Math.random() * diff;\n}\n\n/** Returns a random float on the interval [-abs, abs). */\nexport function randSym(abs: number): number {\n  return randFloat(-abs, abs);\n}\n\nexport function fromMean(mean: number, maxDeviation: number): number {\n  return randFloat(mean - maxDeviation, mean + maxDeviation);\n}\n\n/** Has a `probability` chance of returning true. */\nexport function chance(probability: number): boolean {\n  return Math.random() < probability;\n}\n","import { Particle } from \"./particles\";\nimport { chance, fromMean, randFloat, randSym } from \"./rand\";\n\nexport interface EmitterSpec {\n  type: 0;\n  x: number;\n  y: number;\n}\n\nexport interface Emitter {\n  emit(): Particle[];\n}\n\nexport function fromSpec(spec: EmitterSpec): Emitter {\n  switch (spec.type) {\n    case 0:\n      return getType0Emitter(spec.x, spec.y);\n  }\n}\nexport function getType0Emitter(ex: number, ey: number): Emitter {\n  const emitterX = ex;\n  const emitterY = ey;\n  return {\n    emit(): Particle[] {\n      const out: Particle[] = [];\n\n      let i = 10;\n      while (--i) {\n        if (!chance(0.11 * 5)) {\n          continue;\n        }\n\n        const vx = randSym(1.9);\n        const vy = randSym(1.9);\n\n        const a = -randFloat(0, 0.05);\n        const b = -randFloat(0, 0.05);\n        const c = 0.2;\n        const d = 0.8;\n\n        out.push({\n          x: emitterX,\n          y: emitterY,\n          vx,\n          vy,\n          ax: a * vx,\n          ay: b * vy,\n\n          radius: 10 * d,\n          vRadius: -fromMean(0.25, 0.25) * d,\n\n          r: 270,\n          g: 220,\n          b: 120,\n          a: ~~randFloat(180, 200) * 0.6,\n\n          vr: 20 * c,\n          vg: -5 * c,\n          vb: -5 * c,\n          va: -randFloat(7, 10),\n        });\n      }\n\n      return out;\n    },\n  };\n}\n","import { getType0Emitter, Emitter, EmitterSpec, fromSpec } from \"./emitter\";\n\nexport function startAnimationLoop(\n  canvas: HTMLCanvasElement,\n  addedEmitters: EmitterSpec[]\n): SceneModifier {\n  const TAU = 2 * Math.PI;\n\n  const WIDTH = canvas.width;\n  const HEIGHT = canvas.height;\n  const config = getConfig();\n\n  const ctx = canvas.getContext(\"2d\")!;\n  const emitters: Emitter[] = addedEmitters.map(fromSpec);\n  const particles: Particle[] = [];\n  let paused = false;\n  let shouldEmit = true;\n\n  function main(): void {\n    addEventListeners();\n    tick();\n  }\n\n  function addEventListeners(): void {\n    window.addEventListener(\"keydown\", function (event: KeyboardEvent): void {\n      if (event.key === \" \") {\n        paused = false;\n      }\n    });\n    window.addEventListener(\"keyup\", function (event: KeyboardEvent): void {\n      if (event.key === \" \") {\n        paused = true;\n      }\n    });\n    window.addEventListener(\"keypress\", function (event: KeyboardEvent): void {\n      if (event.key === \"p\") {\n        shouldEmit = !shouldEmit;\n      }\n    });\n  }\n\n  function tick(): void {\n    if (!paused) {\n      if (shouldEmit) {\n        emitParticles();\n      }\n      moveParticles();\n      draw();\n    }\n\n    requestAnimationFrame(tick);\n  }\n\n  function emitParticles(): void {\n    const len = emitters.length;\n    for (let i = 0; i < len; ++i) {\n      const emitter = emitters[i];\n      const newParticles = emitter.emit();\n      particles.push(...newParticles);\n    }\n  }\n\n  function moveParticles(): void {\n    let len = particles.length;\n    for (let i = 0; i < len; ++i) {\n      const p = particles[i];\n\n      p.a += p.va;\n\n      if (p.a <= 0) {\n        particles.splice(i, 1);\n        --i;\n        --len;\n        continue;\n      }\n\n      p.x += p.vx;\n      p.y += p.vy;\n      p.vx += p.ax;\n      p.vy += p.ay;\n\n      p.radius += p.vRadius;\n\n      p.r += p.vr;\n      p.g += p.vg;\n      p.b += p.vb;\n    }\n  }\n\n  function draw(): void {\n    ctx.clearRect(0, 0, WIDTH, HEIGHT);\n\n    drawParticles();\n  }\n\n  function drawParticles(): void {\n    const len = particles.length;\n    for (let i = 0; i < len; ++i) {\n      const p = particles[i];\n      ctx.fillStyle = getStyle(p);\n      ctx.beginPath();\n      ctx.arc(p.x, p.y, p.radius, 0, TAU);\n      ctx.closePath();\n      ctx.fill();\n    }\n  }\n\n  main();\n\n  return getSceneModifier();\n\n  function getSceneModifier(): SceneModifier {\n    return { pushEmitter, popEmitter };\n\n    function pushEmitter(type: 0, x: number, y: number): void {\n      emitters.push(getType0Emitter(x, y));\n    }\n\n    function popEmitter(): void {\n      emitters.pop();\n    }\n  }\n}\n\nfunction getConfig() {\n  return {} as const;\n}\n\nexport interface Particle {\n  x: number;\n  y: number;\n  vx: number;\n  vy: number;\n  ax: number;\n  ay: number;\n\n  radius: number;\n  vRadius: number;\n\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n  vr: number;\n  vg: number;\n  vb: number;\n  va: number;\n}\n\ninterface Rgba {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n}\n\nfunction getStyle(color: Rgba): string {\n  return (\n    \"rgba(\" +\n    color.r +\n    \",\" +\n    color.g +\n    \",\" +\n    color.b +\n    \",\" +\n    color.a / 255 +\n    \")\"\n  );\n}\n\nexport interface SceneModifier {\n  pushEmitter(type: 0, localX: number, localy: number): void;\n  popEmitter(): void;\n}\n","import { EmitterSpec } from \"./emitter\";\n\nconst COORDINATES_KEY = \"Chs2021Apparel.Particle.EmitterCoordinates\";\n\nexport function saveEmitters(specs: EmitterSpec[]): void {\n  localStorage.setItem(COORDINATES_KEY, JSON.stringify(specs));\n}\n\nexport function getSavedEmitters(): EmitterSpec[] {\n  const savedString = localStorage.getItem(COORDINATES_KEY);\n  if (savedString === null) {\n    return [];\n  } else {\n    return JSON.parse(savedString);\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { EmitterSpec } from \"./emitter\";\nimport { SceneModifier, startAnimationLoop } from \"./particles\";\nimport { getSavedEmitters, saveEmitters } from \"./saveEmitters\";\n\nexport class App extends React.Component<{}, State> {\n  private canvasRef: React.RefObject<HTMLCanvasElement>;\n\n  constructor(props: {}) {\n    super(props);\n\n    // @ts-ignore\n    window.app = this;\n\n    this.state = {\n      addedEmitters: getSavedEmitters(),\n      shouldAddEmitter: false,\n      sceneModifier: undefined,\n    };\n\n    this.canvasRef = React.createRef();\n\n    this.bindMethods();\n  }\n\n  bindMethods(): void {\n    this.onCanvasClick = this.onCanvasClick.bind(this);\n  }\n\n  componentDidMount(): void {\n    this.addEventListeners();\n    this.startAnimationLoop();\n  }\n\n  startAnimationLoop(): void {\n    const canvas = this.canvasRef.current;\n    if (canvas === null) {\n      throw new Error(\"Cannot find canvas.\");\n    }\n    const modifier = startAnimationLoop(canvas, this.state.addedEmitters);\n    this.setState({ sceneModifier: modifier });\n  }\n\n  addEventListeners(): void {\n    window.addEventListener(\"keydown\", (event: KeyboardEvent): void => {\n      if (event.key === \"e\") {\n        this.setState({ shouldAddEmitter: true });\n      }\n    });\n    window.addEventListener(\"keyup\", (event: KeyboardEvent): void => {\n      if (event.key === \"e\") {\n        this.setState({ shouldAddEmitter: false });\n      }\n    });\n\n    window.addEventListener(\"keypress\", (event: KeyboardEvent): void => {\n      if (event.key === \"r\") {\n        this.removeEmitter();\n      }\n    });\n  }\n\n  removeEmitter(): void {\n    if (this.state.addedEmitters.length > 0) {\n      this.setState(\n        (prevState) => {\n          const newEmitters = prevState.addedEmitters.slice(0, -1);\n          saveEmitters(newEmitters);\n          return {\n            addedEmitters: newEmitters,\n          };\n        },\n        () => {\n          this.state.sceneModifier?.popEmitter();\n        }\n      );\n    } else {\n      alert(\"No user-added emitters to remove.\");\n    }\n  }\n\n  render(): React.ReactElement {\n    return (\n      <div className=\"App\">\n        <canvas\n          ref={this.canvasRef}\n          width={2000}\n          height={800}\n          onClick={this.onCanvasClick}\n        ></canvas>\n      </div>\n    );\n  }\n\n  onCanvasClick(event: React.MouseEvent<HTMLCanvasElement>): void {\n    const { clientX, clientY, altKey } = event;\n    if (altKey) {\n      this.setState(\n        (prevState) => ({\n          addedEmitters: prevState.addedEmitters.slice(0, -1),\n        }),\n        () => {\n          console.log(\"after removal\", this.state.addedEmitters);\n          window.alert(\"Removed previous point.\");\n        }\n      );\n    } else {\n      const rect = (event.target as HTMLCanvasElement).getBoundingClientRect();\n      const localX = clientX - rect.left;\n      const localY = clientY - rect.top;\n\n      this.addEmitterIfNeeded(localX, localY);\n    }\n  }\n\n  addEmitterIfNeeded(localX: number, localY: number): void {\n    if (this.state.shouldAddEmitter) {\n      this.setState(\n        (prevState) => {\n          const newEmitters = prevState.addedEmitters.concat([\n            { type: 0, x: localX, y: localY },\n          ]);\n          saveEmitters(newEmitters);\n          return {\n            addedEmitters: newEmitters,\n          };\n        },\n        () => {\n          console.log(\"Latest emitter coordinates: \", this.state.addedEmitters);\n          this.state.sceneModifier?.pushEmitter(0, localX, localY);\n        }\n      );\n    }\n  }\n}\n\nexport interface State {\n  addedEmitters: EmitterSpec[];\n  shouldAddEmitter: boolean;\n  sceneModifier: undefined | SceneModifier;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}